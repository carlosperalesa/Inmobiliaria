Log generado el 2024-05-22 12:23:14


******************************inmobiliaria/settings.py******************************

"""
Django settings for inmobiliaria project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vz%-$(n14bgro71!cq$jvw8)bi8k1al(deci_c9=9@9x(-+^+l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'arriendos',
    'widget_tweaks',
    'crispy_forms',
    'crispy_bootstrap5',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'inmobiliaria.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'inmobiliaria.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'inmobiliaria',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'es-cl'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'arriendos/templates/static')]

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'index'
LOGOUT_REDIRECT_URL = '/'
LOGIN_URL = 'login'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Custom user model
AUTH_USER_MODEL = 'arriendos.Usuario'

******************************inmobiliaria/urls.py******************************

from django.conf import settings
from django.conf.urls.static import static
from django.contrib import admin
from django.urls import path
from arriendos.views import *

urlpatterns = [
    path('admin/', admin.site.urls),
    # index
    path('', index, name='index'),
    path('footer/', footer, name='footer'),
    path('header/', header, name='header'),
    path('welcome/', welcome, name='welcome'),
    path('contacto/', contacto, name='contacto'),

    # Manejo de inmuebles
    path('crear_inmuebles/', crear_inmuebles, name='crear_inmuebles'),
    path('ver_inmuebles/', ver_inmuebles, name='ver_inmuebles'),
    path('editar_inmuebles/<int:inmuebles_id>/',
         editar_inmuebles, name='editar_inmuebles'),
    path('ver_propiedad/<int:inmuebles_id>/',
         ver_propiedad, name='ver_propiedad'),
    path('eliminar_inmueble/<int:inmuebles_id>/',
         eliminar_inmuebles, name='eliminar_inmuebles'),
    # Manejo de usuarios
    path('login/', login, name='login'),
    path('register/', register, name='register'),
    path('edit/', edit_profile, name='edit_profile'),
    path('eliminar_usuario/', eliminar_usuario, name='eliminar_usuario'),
    path('logout/', salir, name='logout'),
    # Otras rutas
    path('ajax/comunas/<int:region_id>/',
         comunas_por_region, name='comunas_por_region'),

]

if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL,
                          document_root=settings.MEDIA_ROOT)

******************************arriendos/views.py******************************

from .forms import ContactForm, RegistroUsuarioForm, EditProfileForm, InmuebleForm
from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth.hashers import make_password
from django.contrib.auth import logout, authenticate, login as auth_login
from django.contrib.auth.forms import AuthenticationForm
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from .models import Comuna, Region, Inmueble
from django.http import JsonResponse, HttpResponseRedirect, HttpResponse
from django.urls import reverse_lazy
from django.http import Http404

# Create your views here.


def index(request):
    return render(request, 'welcome.html')


def welcome(request):
    return render(request, 'welcome.html')


def footer(request):
    return render(request, 'footer.html')


def header(request):
    return render(request, 'header.html')


def register(request):
    if request.method == 'POST':
        form = RegistroUsuarioForm(request.POST)
        if form.is_valid():
            user = form.save(commit=False)
            password = form.cleaned_data['password']
            user.password = make_password(password)
            user.save()
            messages.success(
                request, 'Tu registro se ha completado con éxito. ¡Bienvenido a la comunidad!')
            return redirect('login')
        else:
            messages.error(
                request, 'Hubo un problema con tu registro. Por favor, intenta de nuevo.')
    else:
        form = RegistroUsuarioForm()
    return render(request, 'registration/register.html', {'form': form})


def login(request):
    if request.method == 'POST':
        form = AuthenticationForm(request, request.POST)
        if form.is_valid():
            username = form.cleaned_data.get('username')
            password = form.cleaned_data.get('password')
            user = authenticate(username=username, password=password)
            if user is not None:
                auth_login(request, user)
                return redirect('index')
            else:
                messages.error(
                    request, 'Credenciales inválidas. Por favor, intenta de nuevo.')
    else:
        form = AuthenticationForm()
    return render(request, 'registration/login.html', {'form': form})


@login_required
def edit_profile(request):
    if request.method == 'POST':
        form = EditProfileForm(request.POST, instance=request.user)
        if form.is_valid():
            user = form.save(commit=False)
            password = form.cleaned_data.get('password')
            if password:
                user.set_password(password)
            user.save()

            # Verificar si se solicitó eliminar el perfil
            if "eliminar_perfil" in request.POST:
                # Eliminar el perfil
                request.user.delete()
                # Desconectar al usuario
                logout(request)
                # Redirigir a la página de inicio
                return HttpResponseRedirect(reverse_lazy("index"))
            else:
                messages.success(request, 'Perfil actualizado correctamente.')
                return redirect('edit_profile')
        else:
            messages.error(
                request, 'Hubo un problema al actualizar el perfil.')
    else:
        form = EditProfileForm(instance=request.user)
    return render(request, 'registration/edit.html', {'form': form})


@login_required
def eliminar_usuario(request):
    if request.method == 'POST':
        request.user.delete()
        messages.success(request, 'Tu perfil ha sido eliminado correctamente.')
        return redirect('index')
    else:
        return HttpResponse("Error: Método no permitido", status=405)


@login_required
def salir(request):
    logout(request)
    return redirect('index')


def comunas_por_region(request, region_id):
    comunas = Comuna.objects.filter(region_id=region_id).values('id', 'nombre')
    return JsonResponse(list(comunas), safe=False)


@login_required
def crear_inmuebles(request):
    if request.method == 'POST':
        form = InmuebleForm(request.POST, request.FILES)
        if form.is_valid():
            inmueble = form.save(commit=False)
            inmueble.propietario = request.user
            inmueble.save()
            messages.success(request, 'Inmueble creado con éxito.')
            return redirect('ver_inmuebles')
    else:
        form = InmuebleForm()
    return render(request, 'inmuebles/crear_inmuebles.html', {'form': form})


@login_required
def ver_inmuebles(request):
    inmuebles = Inmueble.objects.all()
    regiones = Region.objects.all()
    comunas = Comuna.objects.all()

    region_id = request.GET.get('region')
    comuna_id = request.GET.get('comuna')

    if region_id:
        inmuebles = inmuebles.filter(region_id=region_id)
    if comuna_id:
        inmuebles = inmuebles.filter(comuna_id=comuna_id)

    return render(request, 'inmuebles/ver_inmuebles.html', {
        'regiones': regiones,
        'comunas': comunas,
        'inmuebles': inmuebles
    })


@login_required
def ver_propiedad(request, inmuebles_id):
    try:
        inmueble = get_object_or_404(Inmueble, id=inmuebles_id)
        return render(request, 'inmuebles/ver_propiedad.html', {'inmueble': inmueble})
    except Http404:
        return render(request, 'errors/404.html', status=404)


@login_required
def editar_inmuebles(request, inmuebles_id):
    inmueble = get_object_or_404(Inmueble, id=inmuebles_id)
    if request.user.tipo_usuario != 'arrendador' or request.user != inmueble.propietario:
        return redirect('ver_inmuebles')

    if request.method == 'POST':
        form = InmuebleForm(request.POST, request.FILES,
                            instance=inmueble)
        if form.is_valid():
            form.save()
            messages.success(request, 'Inmueble actualizado con éxito.')
            return redirect('ver_inmuebles')
        else:
            messages.error(
                request, 'Hubo un problema al actualizar el inmueble.')
    else:
        form = InmuebleForm(instance=inmueble)

    return render(request, 'inmuebles/editar_inmuebles.html', {'form': form, 'inmueble': inmueble})


@login_required
def eliminar_inmuebles(request, inmuebles_id):
    inmueble = get_object_or_404(Inmueble, id=inmuebles_id)
    if request.user.tipo_usuario == 'arrendador' and request.user == inmueble.propietario:
        inmueble.delete()
        messages.success(request, 'Inmueble eliminado con éxito')
    return redirect('ver_inmuebles')


def contacto(request):
    if request.method == 'POST':
        form = ContactForm(request.POST)
        if form.is_valid():
            form.save()
            form_submitted = True
        else:
            form_submitted = False
    else:
        form_submitted = False
        initial_data = {
            'name': request.GET.get('name', ''),
            'email': request.GET.get('email', ''),
            'subject': request.GET.get('subject', ''),
            'message': request.GET.get('message', ''),
        }
        form = ContactForm(initial=initial_data)

    return render(request, 'contacto.html', {'form': form, 'form_submitted': form_submitted})

******************************arriendos/models.py******************************

from django import forms
from django.conf import settings
from django.db import models
from django.db.models import Model
from django.core.validators import RegexValidator
from django.contrib.auth.models import AbstractBaseUser, BaseUserManager, PermissionsMixin
from django.core.exceptions import ValidationError


class UsuarioManager(BaseUserManager):
    def create_user(self, email, password=None, **extra_fields):
        if not email:
            raise ValueError("El email debe ser proporcionado")
        email = self.normalize_email(email)
        user = self.model(email=email, **extra_fields)
        user.set_password(password)
        user.save(using=self._db)
        return user

    def create_superuser(self, email, password=None, **extra_fields):
        extra_fields.setdefault('is_staff', True)
        extra_fields.setdefault('is_superuser', True)
        return self.create_user(email, password, **extra_fields)


def validar_formato_rut(value):
    if not value:
        raise ValidationError('El RUT no puede estar vacío.')
    # Verificar si el formato del RUT es válido (solo números y K, con 9 dígitos)
    if len(value) != 10 or value[8] not in '0123456789kK' or not value[:-2].isdigit():
        raise ValidationError(
            'El RUT debe tener el formato correcto: 12345678-9 o 12345678-K')


class Usuario(AbstractBaseUser, PermissionsMixin):
    TIPO = (
        ('arrendador', 'Arrendador'),
        ('arrendatario', 'Arrendatario'),
    )
    tipo_usuario = models.CharField(max_length=50, choices=TIPO)

    rut_validator = RegexValidator(
        regex=r'^\d{7,8}-[\dKk]$',
        message="El formato del RUT debe ser 7 u 8 dígitos seguidos de un guión y un dígito verificador."
    )
    rut = models.CharField(max_length=10, validators=[rut_validator])

    primer_nombre = models.CharField(max_length=30)
    segundo_nombre = models.CharField(max_length=30, blank=True, null=True)
    primer_apellido = models.CharField(max_length=30)
    segundo_apellido = models.CharField(max_length=30, blank=True, null=True)
    direccion = models.CharField(max_length=255, blank=True, null=True)
    email = models.EmailField(unique=True)
    telefono_personal = models.CharField(max_length=9, blank=True, null=True)

    is_staff = models.BooleanField(default=False)
    is_active = models.BooleanField(default=True)

    USERNAME_FIELD = 'email'
    REQUIRED_FIELDS = ['primer_nombre', 'primer_apellido']

    objects = UsuarioManager()

    def normalizar_rut(self):
        rut = self.rut.replace(".", "").replace("-", "")
        rut = rut[:-1] + "-" + rut[-1].upper()
        return rut

    def save(self, *args, **kwargs):
        if self.rut:
            self.rut = self.normalizar_rut()
        super().save(*args, **kwargs)

    def __str__(self) -> str:
        return f"{self.primer_nombre} {self.segundo_nombre} {self.primer_apellido} {self.segundo_apellido}"


class Region(models.Model):
    nombre = models.CharField(max_length=100, unique=True)

    def __str__(self):
        return self.nombre


class Comuna(models.Model):
    nombre = models.CharField(max_length=100)
    region = models.ForeignKey(Region, on_delete=models.CASCADE)

    def __str__(self):
        return f"{self.nombre} - {self.region.nombre}"


class Inmueble(models.Model):
    TIPO_INMUEBLE_CHOICES = [
        ('Casa', 'Casa'),
        ('Departamento', 'Departamento'),
        ('Parcela', 'Parcela'),
    ]
    descripcion = models.TextField()
    m2_construidos = models.PositiveIntegerField()
    m2_totales = models.PositiveIntegerField()
    cantidad_estacionamientos = models.PositiveIntegerField()
    cantidad_habitaciones = models.PositiveIntegerField()
    cantidad_banos = models.PositiveIntegerField()
    direccion = models.CharField(max_length=255)
    comuna = models.ForeignKey(Comuna, on_delete=models.CASCADE)
    region = models.ForeignKey(Region, on_delete=models.CASCADE)
    tipo_inmueble = models.CharField(
        max_length=20, choices=TIPO_INMUEBLE_CHOICES)
    precio_mensual_arriendo = models.PositiveIntegerField()
    propietario = models.ForeignKey(
        settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    arrendatario = models.ForeignKey(
        settings.AUTH_USER_MODEL, related_name='arrendamientos', on_delete=models.SET_NULL, null=True, blank=True)
    imagen = models.ImageField(upload_to='img', blank=True, null=True)


class Contact(models.Model):
    name = models.CharField(max_length=100)
    email = models.EmailField()
    subject = models.CharField(max_length=100)
    message = models.TextField()

******************************arriendos/forms.py******************************

from .models import Inmueble, Region, Comuna, Contact
from django import forms
from django.contrib.auth.forms import UserChangeForm
from django.contrib.auth.models import User
from .models import Usuario, Inmueble, Region  # Importa el modelo Region
from crispy_forms.helper import FormHelper
from crispy_forms.layout import Submit


class RegistroUsuarioForm(forms.ModelForm):
    password = forms.CharField(widget=forms.PasswordInput, label='Contraseña')
    confirm_password = forms.CharField(
        widget=forms.PasswordInput, label='Confirme su contraseña')

    class Meta:
        model = Usuario
        fields = ['tipo_usuario', 'rut', 'primer_nombre', 'segundo_nombre', 'primer_apellido',
                  'segundo_apellido', 'direccion', 'email', 'telefono_personal', 'password']

    def clean(self):
        cleaned_data = super().clean()
        password = cleaned_data.get("password")
        confirm_password = cleaned_data.get("confirm_password")

        if password != confirm_password:
            self.add_error('confirm_password', "Las contraseñas no coinciden")

        return cleaned_data


class EditProfileForm(forms.ModelForm):
    password = forms.CharField(widget=forms.PasswordInput, label='Contraseña')
    confirm_password = forms.CharField(
        widget=forms.PasswordInput, label='Confirme su contraseña')

    class Meta:
        model = Usuario
        fields = ['tipo_usuario', 'rut', 'primer_nombre', 'segundo_nombre', 'primer_apellido',
                  'segundo_apellido', 'direccion', 'email', 'telefono_personal', 'password', 'confirm_password']

    def __init__(self, *args, **kwargs):
        super(EditProfileForm, self).__init__(*args, **kwargs)
        self.fields['rut'].widget.attrs['readonly'] = True
        self.fields['rut'].widget.attrs['class'] = 'form-control-plaintext'
        self.fields['primer_nombre'].widget.attrs['readonly'] = True
        self.fields['primer_nombre'].widget.attrs['class'] = 'form-control-plaintext'
        self.fields['primer_apellido'].widget.attrs['readonly'] = True
        self.fields['primer_apellido'].widget.attrs['class'] = 'form-control-plaintext'
        self.fields['email'].widget.attrs['readonly'] = True
        self.fields['email'].widget.attrs['class'] = 'form-control-plaintext'


class InmuebleForm(forms.ModelForm):
    region = forms.ModelChoiceField(
        queryset=Region.objects.all(), empty_label=None, label='Región')
    comuna = forms.ModelChoiceField(
        queryset=Comuna.objects.none(), label='Comuna')

    class Meta:
        model = Inmueble
        fields = [
            'descripcion', 'm2_construidos', 'm2_totales',
            'cantidad_estacionamientos', 'cantidad_habitaciones', 'cantidad_banos',
            'direccion', 'region', 'comuna', 'tipo_inmueble', 'precio_mensual_arriendo',
            'imagen'
        ]

    def __init__(self, *args, **kwargs):
        super(InmuebleForm, self).__init__(*args, **kwargs)
        self.fields['comuna'].queryset = Comuna.objects.none()

        if 'region' in self.data:
            try:
                region_id = int(self.data.get('region'))
                self.fields['comuna'].queryset = Comuna.objects.filter(
                    region_id=region_id).order_by('nombre')
            except (ValueError, TypeError):
                pass
        elif self.instance.pk:
            self.fields['comuna'].queryset = self.instance.region.comuna_set.order_by(
                'nombre')


class ContactForm(forms.ModelForm):
    class Meta:
        model = Contact
        fields = ['name', 'email', 'subject', 'message']
        labels = {
            'name': 'Nombre',
            'email': 'Correo',
            'subject': 'Motivo',
            'message': 'Mensaje',
        }

******************************arriendos/apps.py******************************

from django.apps import AppConfig


class ArriendosConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'arriendos'

******************************arriendos/admin.py******************************

from django.contrib import admin
from arriendos.models import Usuario, Inmueble, Contact

# Register your models here.

admin.site.register(Usuario)
admin.site.register(Inmueble)
admin.site.register(Contact)

******************************arriendos/templates/index.html******************************

{% load static %}

<!DOCTYPE html>
<html lang="es-cl">

<head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />
    <!-- bootstrap -->
    <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" rel="stylesheet" />
    <!-- css -->
    <link href="{% static 'css/style.css' %}" rel="stylesheet" />
    <!-- fontawesome -->
    <script src="https://kit.fontawesome.com/334a740400.js" crossorigin="anonymous"></script>
    <script src="{% static 'js/script_comunas.js' %}"></script>
    <script src="{% static 'js/modal_delete.js' %}"></script>
    <title>
        {%block title%}{%endblock title%}
    </title>

</head>

<!-- Modal -->
<div class="modal fade" id="eliminarModal" tabindex="-1" aria-labelledby="eliminarModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="eliminarModalLabel">Confirmar eliminación</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        ¿Está seguro que desea eliminar este elemento? Esta acción no se puede deshacer.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">Cancelar</button>
        <form method="post" action="{% url 'eliminar_usuario' %}" id="eliminarUsuarioForm">
          {% csrf_token %}
          <button type="submit" class="btn btn-danger" id="btnConfirmarEliminar">Aceptar</button>
        </form>
      </div>
    </div>
  </div>
</div>


<body style="background-color: #D9FFC0">

{% include 'header.html' %}


    {% block content %}
    {% endblock %}



{% include 'footer.html' %}


</body>
<script crossorigin="anonymous" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

</html>

******************************arriendos/templates/welcome.html******************************

{% extends 'index.html' %}
{% load static %}
{% block title %}Bienvenido{% endblock %}

{% block content %}
<div id="carrusel" class="carousel slide" data-bs-ride="carousel"> <!-- Define a fixed height -->
    <div class="carousel-inner" style="height: 100vh"> <!-- Ensure the inner container uses full height -->
        <div class="carousel-item active">
            <img src={%static 'img/carrusel (1).jpg'%} class="d-block w-100" alt="cr1">
        </div>
        <div class="carousel-item">
            <img src={%static 'img/carrusel (2).png'%} class="d-block w-100" alt="cr2">
        </div>
        <div class="carousel-item">
            <img src={%static 'img/carrusel (3).png'%} class="d-block w-100" alt="cr3">
        </div>
        <div class="carousel-item">
            <img src={%static 'img/carrusel (1).png'%} class="d-block w-100" alt="cr4">
        </div>
    </div>
    <button id="prev" class="carousel-control-prev" type="button" data-bs-target="#carrusel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button id="next" class="carousel-control-next" type="button" data-bs-target="#carrusel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

<div class="mt-2" style="padding-left: 50px">
    <h1 class="mt-5">¿Qué nos mueve?</h1>
    <div class="row mt-5">
        <div class="col-6">
            <h2>Ser confiables</h2>
            <h6>Somos personas honestas que a pesar de las dificultades hacemos cumplir nuestro compromiso. Sobresalimos por nuestro profesionalismo con colaboradores resilientes capaces de adaptarse flexiblemente a situaciones adversas. La calidad de nuestro trabajo y de todo lo que realizamos es nuestro propósito.</h6>
        </div>
        <div class="col-4">
            <h2>Ser innovadores</h2>
            <h6>Nos caracterizamos por ser creativos y proactivos, siempre buscamos la manera de mejorar y de hacer las cosas de manera diferente. Nos adaptamos a los cambios y a las nuevas tecnologías para ofrecer un servicio de calidad y eficiente.</h6>
        </div>
        <div class="col-4 mb-5 mt-5">
            <h2>Ser responsables</h2>
            <h6>Nos comprometemos con nuestros clientes y con nuestro trabajo, cumplimos con lo que prometemos y nos esforzamos por hacerlo de la mejor manera. Nos preocupamos por el bienestar de nuestros colaboradores y de la sociedad, por eso siempre buscamos la manera de contribuir con el desarrollo sostenible y el cuidado del medio ambiente.</h6>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var myCarousel = new bootstrap.Carousel(document.getElementById('carrusel'), {
            interval: 1800 // Cambia este valor para ajustar la velocidad del carrusel (en milisegundos)
        });
    });
</script>
{% endblock %}

******************************arriendos/templates/contacto.html******************************

{% extends 'index.html' %}
{% load widget_tweaks %}

{% block title %}Contacto{% endblock %}

{% block content %}
<div style="display: flex; flex-direction: column; align-items: center; min-height: 80vh;">
    <div style="width: 50%">
        {% if form_submitted %}
            {% if form.is_valid %}
                <div class="alert alert-success mt-3" role="alert">
                    Gracias por contactarnos, nos pondremos en contacto contigo en breve.
                </div>
            {% endif %}
        {% elif form.errors %}
            <div class="alert alert-danger mt-3" role="alert">
                <ul>
                    {% for field, errors in form.errors.items %}
                        {% for error in errors %}
                            <li>{{ error }}</li>
                        {% endfor %}
                    {% endfor %}
                </ul>
            </div>
        {% endif %}
    </div>

    <form id="contactForm" action="{% url 'contacto' %}" method="POST" class="card mb-3 p-3 mt-3" style="width: 50%">
        {% csrf_token %}
        <h5 class="card-title">Contacto</h5>
        <div class="mb-3">
            {% for field in form %}
                <div class="row mb-3">
                    <label for="{{ field.id_for_label }}" class="col-sm-2 col-form-label">{{ field.label }}</label>
                    <div class="col-sm-10">
                        {{ field|add_class:"form-control" }}
                    </div>
                </div>
            {% endfor %}
        </div>
        <div class="d-flex justify-content-end">
            <button type="submit" class="btn btn-success me-2">Enviar</button>
            {% comment %} <button type="reset" value="Reset" class="btn btn-outline-success">Limpiar</button> {% endcomment %}
        </div>
    </form>
</div>

{% endblock %}

******************************arriendos/templates/header.html******************************

{% load static %}

<nav class="navbar navbar-expand-md" style="background-color: black; color: white;">
    <div class="container-fluid text-white" style="background-color: black; color: white;">
        <button class="navbar-toggler text-white" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link text-white" href="{% url 'index' %}">Inicio</a>
                </li>
                {% if request.user.is_authenticated %}
                    {% if request.user.tipo_usuario == 'arrendador' %}
                        <li class="nav-item">
                            <a class="nav-link text-white" href="{% url 'crear_inmuebles' %}">Crear Inmueble</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" href="{% url 'ver_inmuebles' %}">Ver Propiedades</a>
                        </li>
                    {% endif %}
                    {% if request.user.tipo_usuario == 'arrendatario' %}
                        <li class="nav-item">
                            <a class="nav-link text-white" href="{% url 'ver_inmuebles' %}">Ver Propiedades</a>
                        </li>
                    {% endif %}
                {% else %}
                <!-- Opciones para usuarios no autenticados -->
                {% endif %}
                <li class="nav-item">
                    <a class="nav-link text-white" href="{% url 'contacto' %}">Contacto</a>
                </li>
            </ul>
        </div>
        <div class="d-flex">
            <span>
                {% if request.user.is_authenticated %}
                    {{user.primer_nombre | title}} ({{ user.email }}) 
                    <a href="{% url "edit_profile" %}">
                        <button type="button" class="btn text-white">Editar</button></a>
                    <a href="{% url "logout" %}">
                        <button type="button" class="btn text-white">Salir</button></a>
                {% else %} 
                    <a href="{% url "login" %}">
                        <button type="button" class="btn text-white">Ingresar</button></a>
                    <a href="{% url "register" %}">
                        <button type="button" class="btn text-white">Registrate</button></a>
                {% endif %}  
            </span>
        </div>
    </div>
</nav>

******************************arriendos/templates/footer.html******************************

{% load static %}
<div class="footer mt-5 text-center bg-black text-white">
    <div class="container">
        <div class="row">
            <div class="col">
                Creado por Carlos Perales © 2024 DesafioLatam. Todos los derechos reservados.
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="d-flex justify-content-center align-items-center mt-2">
                    <a href="https://www.facebook.com/" target="_blank" class="text-white mx-2">
                        <i class="fab fa-facebook-f"></i>
                    </a>
                    <a href="https://twitter.com/" target="_blank" class="text-white mx-2">
                        <i class="fab fa-twitter"></i>
                    </a>
                    <a href="https://www.instagram.com/" target="_blank" class="text-white mx-2">
                        <i class="fab fa-instagram"></i>
                    </a>
                    <a href="https://www.linkedin.com/in/" target="_blank" class="text-white mx-2">
                        <i class="fab fa-linkedin-in"></i>
                    </a>
                    <a class="nav-link text-white p-0 mx-2" href="#top">
                        <i class="fas fa-arrow-up"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

******************************arriendos/templates/registration/login.html******************************

{% extends 'index.html' %}
{% load crispy_forms_tags %}

{% block title %}Bienvenido{% endblock %}

{% block content %}
<div style="display: flex; flex-direction: column; align-items: center; min-height: 80vh;">
    <div class="card mb-3 p-3 mt-3" style="width: 50%">
        <div class="card-body">
            <h5 class="card-title">Iniciar sesión</h5>
            <form action="{% url 'login' %}" method="POST">
                {% csrf_token %}
                {{ form|crispy }}
                <div class="d-flex justify-content-between m-3">
                    <label for="ShowPass">Mostrar contraseña</label>
                    <input class="form-check-input" type="checkbox" id="ShowPass" onclick="myFunction()">
                </div>
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-success me-2">Iniciar sesión</button>
                </div>
            </form>
            <script>
                function myFunction() {
                    var x = document.getElementById("id_password");
                    if (x.type === "password") {
                        x.type = "text";
                    } else {
                        x.type = "password";
                    }
                }
            </script>
        </div>
    </div>
</div>


{% endblock %}

******************************arriendos/templates/registration/edit.html******************************

{% extends 'index.html' %}
{% load crispy_forms_tags %}
{% load static %}

{% block title %}Editar Perfil{% endblock %}

{% block content %}

<div style="display: flex; flex-direction: column; align-items: center; min-height: 80vh;">
    {% if messages %}
        {% for message in messages %}
            <div class="alert alert-{{ message.tags }} mt-3" role="alert" style="width: 50%">
                {{ message }}
            </div>
        {% endfor %}
    {% endif %}
    <div class="card mb-3 p-3 mt-3" style="width: 50%">
        <div class="card-body">
            <h5 class="card-title">Editar Perfil</h5>
            <form method="post" action="{% url 'edit_profile' %}">
                {% csrf_token %}
                {{ form|crispy }}
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-success me-2">Guardar Cambios</button>
                </div>
                {% if form.errors %}
                <div class="alert alert-danger mt-3" role="alert">
                    {{ form.non_field_errors }}
                </div>
                {% endif %}
            </form>
            <div style="display: flex; justify-content: flex-end; margin-top: 10px;"> <!-- Envuelve ambos botones y los alinea a la derecha -->
                <form method="post" action="{% url 'eliminar_usuario' %}" style="margin-right: 10px;">
                    {% csrf_token %}
                    <button type="button" class="btn btn-danger btnEliminar" data-bs-toggle="modal" data-bs-target="#eliminarModal">
                        Eliminar Perfil 
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>


<script src="{% static 'js/modal_delete.js' %}"></script>
{% endblock %}


******************************arriendos/templates/registration/register.html******************************

{% extends 'index.html' %}
{% load crispy_forms_tags %}

{% block title %}Registro{% endblock %}

{% block content %}

{% if messages %}
    <script>
        {% for message in messages %}
            alert('{{ message }}');
        {% endfor %}
    </script>
{% endif %}

<div style="display: flex; flex-direction: column; align-items: center; min-height: 80vh;">
    <div class="card mb-3 p-3 mt-3" style="width: 50%">
        <div class="card-body">
            <h5 class="card-title">Registro</h5>
            <form method="POST">
                {% csrf_token %}
                {{ form|crispy }}
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-success">Registrarse</button>
                </div>            
            </form>
        </div>
    </div>
</div>

{% endblock %}

{% comment %} 

{% endcomment %}

{% comment %} 
<h2>Registro</h2>
<form method="POST">
  {% csrf_token %}
  {{ form.as_p }}
  <button type="submit">Registrarse</button>
</form>
{% endcomment %} 
******************************arriendos/templates/inmuebles/crear_inmuebles.html******************************

{% extends 'index.html' %}
{% load static %}
{% load crispy_forms_tags %}

{% block title %}Crear Inmueble{% endblock %}

{% block content %}
<div style="display: flex; flex-direction: column; align-items: center; min-height: 80vh;">
    <div class="card mb-3 p-3 mt-3" style="width: 50%">
        <div class="card-body">
            <h5 class="card-title">Crear un nuevo inmueble</h5>
            <form method="post" enctype="multipart/form-data">
                {% csrf_token %}
                {% for field in form %}
                    {{ field|as_crispy_field }}
                {% endfor %}

                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-success">Crear</button>
                    <button type="reset" class="btn btn-outline-success ms-2">Limpiar</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript">
    $(document).ready(function() {
        $('#id_region').change(function() {
            var url = "{% url 'comunas_por_region' 0 %}".slice(0, -2) + $(this).val() + '/';
            $.ajax({
                url: url,
                success: function(data) {
                    var $comuna = $('#id_comuna');
                    $comuna.find('option').remove();
                    $.each(data, function(key, value) {
                        $comuna.append('<option value="' + value.id + '">' + value.nombre + '</option>');
                    });
                }
            });
        });
    });
</script>
<style>
    textarea {
        height: 5em;  /* Ajusta el alto del cuadro de mensaje */
    }
</style>
{% endblock %}
******************************arriendos/templates/inmuebles/editar_inmuebles.html******************************

{% extends 'index.html' %}
{% load static %}
{% load crispy_forms_tags %}

{% block title %}Editar Inmueble{% endblock %}

{% block content %}
<div style="display: flex; flex-direction: column; align-items: center; min-height: 80vh;">
    <div class="card mb-3 p-3 mt-3" style="width: 50%">
        <div class="card-body">
            <h5 class="card-title">Editar Inmueble</h5>
            <form method="post" enctype="multipart/form-data">
                {% csrf_token %}
                {{ form|crispy }}
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-success">Guardar Cambios</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript">
    $(document).ready(function() {
        $('#id_region').change(function() {
            var url = "{% url 'comunas_por_region' 0 %}".slice(0, -2) + $(this).val() + '/';
            $.ajax({
                url: url,
                success: function(data) {
                    var $comuna = $('#id_comuna');
                    $comuna.find('option').remove();
                    $.each(data, function(key, value) {
                        $comuna.append('<option value="' + value.id + '">' + value.nombre + '</option>');
                    });
                }
            });
        });
    });
</script>
<style>
    textarea {
        height: 5em;  /* Ajusta el alto del cuadro de mensaje */
    }
</style>
<script src="{% static 'js/modal_delete.js' %}"></script>
{% endblock %}
******************************arriendos/templates/inmuebles/ver_inmuebles.html******************************

{% extends 'index.html' %}
{% load static %}

{% block title %}Ver Inmuebles{% endblock %}

{% block content %}
<style>
.card{
    border-radius: 4px;
    background: #fff;
    box-shadow: 0 6px 10px rgba(0,0,0,.08), 0 0 6px rgba(0,0,0,.05);
    transition: .3s transform cubic-bezier(.155,1.105,.295,1.12),.3s box-shadow,.3s -webkit-transform cubic-bezier(.155,1.105,.295,1.12);
    cursor: pointer;
}

.card:hover{
     transform: scale(1.05);
  box-shadow: 0 10px 20px rgba(0,0,0,.12), 0 4px 8px rgba(0,0,0,.06);

.page-link {
    color: #fff; /* Color del texto */
    background-color: #28a745; /* Color de fondo verde "success" */
    border-color: #28a745; /* Color del borde */
}

.page-item.active .page-link {
    background-color: #218838; /* Color de fondo verde más oscuro para el botón activo */
    border-color: #1e7e34; /* Color del borde */
}
}</style>

{% if messages %}
{% for message in messages %}
<div class="container mt-4">
    <div class="alert alert-{{ message.tags }} mt-3" role="alert">
        {{ message }}
    </div>
</div>
{% endfor %}
{% endif %}

{% if user.tipo_usuario == 'arrendatario' %}
<div class="container mt-4">
    <form method="GET" action="{% url 'ver_inmuebles' %}" class="mb-3">
        <div class="row">
            <div class="col-md-4">
                <select name="region" id="id_region" class="form-select">
                    <option value="">Selecciona una región</option>
                    {% for region in regiones %}
                    <option value="{{ region.id }}" {% if request.GET.region == region.id|stringformat:"s" %}selected{% endif %}>{{ region.nombre }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="col-md-4">
                <select name="comuna" id="id_comuna" class="form-select">
                    <option value="">Selecciona una comuna</option>
                    {% for comuna in comunas %}
                    <option value="{{ comuna.id }}" {% if request.GET.comuna == comuna.id|stringformat:"s" %}selected{% endif %}>{{ comuna.nombre }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="col-md-4 d-flex justify-content-end">
                <button type="submit" class="btn btn-success me-2">Filtrar</button>
                <a href="{% url 'ver_inmuebles' %}" class="btn btn-outline-success">Limpiar Filtros</a>
            </div>
        </div>
    </form>
</div>
{% endif %}
<div class="container" style="min-height: 80vh;">
    <div class="row" id="inmueblesContainer">
        {% for inmueble in inmuebles %}
        <div class="col-md-3 mb-4 mt-3" data-inmueble-id="{{ inmueble.id }}" data-comuna-id="{{ inmueble.comuna.id }}">
            <div class="card h-100">
                {% if inmueble.imagen %}
                <img src="{{ inmueble.imagen.url }}" class="card-img-top" alt="{{ inmueble.descripcion }}" style="max-height: 150px; object-fit: cover;">
                {% else %}
                <img src="{% static 'img/home_default.jpg' %}" class="card-img-top" alt="{{ inmueble.descripcion }}" style="max-height: 150px; object-fit: cover;">
                {% endif %}
                <div class="card-body">
                    <h6 class="card-title">{{ inmueble.descripcion }}</h6>
                    <p class="card-text"><small class="text-muted">Región: {{ inmueble.comuna.region.nombre }}</small></p>
                    <p class="card-text"><small class="text-muted">Comuna: {{ inmueble.comuna.nombre }}</small></p>
                    <p class="card-text"><small class="text-muted">Precio: ${{ inmueble.precio_mensual_arriendo }}</small></p>
                </div>
                <div class="card-footer d-flex justify-content-end">
                    {% if request.user.is_authenticated %}
                        {% if request.user.tipo_usuario == 'arrendador' %}
                            <div class="btn-group" role="group" aria-label="Acciones">
                                <a href="{% url 'editar_inmuebles' inmuebles_id=inmueble.id %}" class="btn btn-success btn-sm mr-3">Editar</a>
                                <form method="post" action="{% url 'eliminar_inmuebles' inmuebles_id=inmueble.id %}">  
                                    {% csrf_token %}
                                    <button type="button" class="btn btn-danger btn-sm btnEliminar" data-inmueble-id="{{ inmueble.id }}">Eliminar</button>                            </form>
                            </div>
                        {% else %}
                            <form>
                                <a href="{% url 'ver_propiedad' inmuebles_id=inmueble.id %}" class="btn btn-success btn-sm">Ver Propiedad</a>
                            </form>
                        {% endif %}
                    {% endif %}
                </div>
            </div>
        </div>
        {% endfor %}
    </div> 
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script name="paginador">
    $(document).ready(function() {
        // Cantidad de tarjetas por página
        var tarjetasPorPagina = 12;
        // Total de tarjetas
        var totalTarjetas = $('#inmueblesContainer .col-md-3').length;
        // Número de páginas
        var numeroPaginas = Math.ceil(totalTarjetas / tarjetasPorPagina);

        // Función para mostrar las tarjetas de una página específica
        function mostrarTarjetas(pagina) {
            var inicio = (pagina - 1) * tarjetasPorPagina;
            var fin = inicio + tarjetasPorPagina;
            $('#inmueblesContainer .col-md-3').hide().slice(inicio, fin).show();
        }

        // Crear la paginación
        var paginacion = $('<nav aria-label="Page navigation example"><ul class="pagination justify-content-end"></ul></nav>');
        var listaPaginas = paginacion.find('ul');

        for (var i = 1; i <= numeroPaginas; i++) {
            var enlacePagina = $('<li class="page-item"><a class="page-link" href="#">' + i + '</a></li>');
            enlacePagina.click(function() {
                var pagina = parseInt($(this).text());
                mostrarTarjetas(pagina);
                listaPaginas.find('.active').removeClass('active');
                $(this).addClass('active');
            });
            listaPaginas.append(enlacePagina);
        }

        // Mostrar la primera página al cargar
        mostrarTarjetas(1);
        listaPaginas.find('li:first-child').addClass('active');

        // Agregar la paginación al DOM
        $('#inmueblesContainer').after(paginacion);
    });
</script>
<script type="text/javascript">
    $(document).ready(function() {
        $('#id_region').change(function() {
            var url = "{% url 'comunas_por_region' 0 %}".slice(0, -2) + $(this).val() + '/';
            $.ajax({
                url: url,
                success: function(data) {
                    var $comuna = $('#id_comuna');
                    $comuna.find('option').remove();
                    $.each(data, function(key, value) {
                        $comuna.append('<option value="' + value.id + '">' + value.nombre + '</option>');
                    });
                }
            });
        });
    });
</script>
<script src="{% static 'js/modal_delete.js' %}"></script>
{% endblock %}
******************************arriendos/templates/inmuebles/ver_propiedad.html******************************

{% extends 'index.html' %}
{% load static %}

{% block title %}Detalles de la Propiedad{% endblock %}

{% block content %}
<div class="container" style="display: flex; flex-direction: column; align-items: center; min-height: 80vh;">
    <div class="card mb-3 mt-3">
        <div class="row g-0">
            <div class="col-md-6">
                {% if inmueble.imagen %}
                <img src="{{ inmueble.imagen.url }}" class="img-fluid rounded-start w-100 h-100" alt="{{ inmueble.nombre }}">
                {% else %}
                <img src="{% static 'img/home_default.jpg' %}" class="img-fluid rounded-start" alt="{{ inmueble.nombre }}">
                {% endif %}
            </div>
            <div class="col-md-6">
                <div class="card-body">
                    <h5 class="card-title">Descripción: {{ inmueble.descripcion }}</h5>
                    <p class="card-text">Región: {{ inmueble.comuna.region.nombre }}</p>
                    <p class="card-text">Comuna: {{ inmueble.comuna.nombre }}</p>
                    <p class="card-text">Metros² Construidos: {{ inmueble.m2_construidos }}</p>
                    <p class="card-text">Metros² Totales: {{ inmueble.m2_totales }}</p>
                    <p class="card-text">Cantidad de Estacionamientos: {{ inmueble.cantidad_estacionamientos }}</p>
                    <p class="card-text">Cantidad de Habitaciones: {{ inmueble.cantidad_habitaciones }}</p>
                    <p class="card-text">Cantidad de Baños: {{ inmueble.cantidad_banos }}</p>
                    <p class="card-text">Precio Mensual Arriendo: ${{ inmueble.precio_mensual_arriendo }}</p>
                    <div class="d-flex justify-content-end">
                    <a href="{% url 'contacto' %}?name={{ request.user.primer_nombre }}&email={{ request.user.email }}&subject=Solicitud de arriendo de la propiedad {{ inmueble.id }}&message=Hola! me interesa la propiedad {{ inmueble.id }} llamame al {{ request.user.telefono_personal }}" class="btn btn-success me-2">Solicitar Arriendo</a>                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}
